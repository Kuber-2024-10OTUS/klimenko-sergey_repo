loki:
  commonConfig:
    replication_factor: 1
  schemaConfig:
    configs:
      - from: "2024-04-01"
        store: tsdb
        object_store: s3
        schema: v13
        index:
          prefix: loki_index_
          period: 24h
  # storage_config:
    # aws:
    #   region: ru-central1-a
    #   bucketnames: loki-logs-bucket
    #   s3forcepathstyle: false
  pattern_ingester:
      enabled: true
  limits_config:
    allow_structured_metadata: true
    volume_enabled: true
    retention_period: 672h
  ruler:
    enable_api: true
  auth_enabled: false
  storage:
    type: s3
    bucketNames:
        chunks: "loki-logs-bucket"
        ruler: "loki-logs-bucket"
        admin: "loki-logs-bucket"
    s3:
      # s3 URL can be used to specify the endpoint, access key, secret key, and bucket name this works well for S3 compatible storages or are hosting Loki on-premises and want to use S3 as the storage backend. Either use the s3 URL or the individual fields below (AWS endpoint, region, secret).
      s3: https://storage.yandexcloud.net/loki-logs-bucket
      bucketNames: "loki-logs-bucket"
      # AWS endpoint URL
      endpoint: https://storage.yandexcloud.net
      # AWS region where the S3 bucket is located
      region: "ru-central1-a"
      # AWS secret access key
      secretAccessKey: 
      # AWS access key ID
      accessKeyId: 
      # # AWS signature version (e.g., v2 or v4)
      # signatureVersion: <your-signature-version>
      # Forces the path style for S3 (true/false)
      # s3ForcePathStyle: false
      # # Allows insecure (HTTP) connections (true/false)
      # insecure: false
      # # HTTP configuration settings
      # http_config: {}

minio:
  enabled: false
      
deploymentMode: SingleBinary

singleBinary:
  replicas: 1
  # persistence:
  #   storageClass: gp2
  #   accessModes:
  #     - ReadWriteOnce
  #   size: 30Gi
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: node-role
            operator: In
            values:
            - "infra"
  tolerations:
  - key: "node-role"
    operator: "Equal"
    value: "infra"
    effect: "NoSchedule"

test:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: node-role
            operator: In
            values:
            - "infra"
  tolerations:
  - key: "node-role"
    operator: "Equal"
    value: "infra"
    effect: "NoSchedule"

lokiCanary:
  replicas: 1
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: node-role
            operator: In
            values:
            - "infra"
  tolerations:
  - key: "node-role"
    operator: "Equal"
    value: "infra"
    effect: "NoSchedule"
  nodeSelector:
    node-role: infra

chunksCache:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: node-role
            operator: In
            values:
            - "infra"
  tolerations:
  - key: "node-role"
    operator: "Equal"
    value: "infra"
    effect: "NoSchedule"
  nodeSelector:
    node-role: infra

gateway:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: node-role
            operator: In
            values:
            - "infra"
  tolerations:
  - key: "node-role"
    operator: "Equal"
    value: "infra"
    effect: "NoSchedule"

resultsCache:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: node-role
            operator: In
            values:
            - "infra"
  tolerations:
  - key: "node-role"
    operator: "Equal"
    value: "infra"
    effect: "NoSchedule"

# Zero out replica counts of other deployment modes
backend:
  replicas: 0
read:
  replicas: 0
write:
  replicas: 0

ingester:
  replicas: 0
querier:
  replicas: 0
queryFrontend:
  replicas: 0
queryScheduler:
  replicas: 0
distributor:
  replicas: 0
compactor:
  replicas: 0
indexGateway:
  replicas: 0
bloomCompactor:
  replicas: 0
bloomGateway:
  replicas: 0